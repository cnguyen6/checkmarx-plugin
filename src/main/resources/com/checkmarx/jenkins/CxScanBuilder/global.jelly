<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:c="/lib/credentials" xmlns:d="jelly:define"
         xmlns:l="/lib/layout"
         xmlns:t="/lib/hudson" xmlns:f="/lib/form">
    <!-- This Jelly script is used to produce the global configuration option. Jenkins uses a set of tag libraries
        to provide uniformity in forms. To determine where this tag is defined, first check the namespace URI, and then
        look under $JENKINS/views/. For example, <f:section> is defined in $JENKINS/views/lib/form/section.jelly. It's
        also often useful to just check other similar scripts to see what tags they use. Views are always organized according
        to its owner class, so it should be straightforward to find them. -->

    <f:section title="Checkmarx" name="checkmarx">

        <f:invisibleEntry>
            <!-- Used for Internet Explorer cache invalidation -->
            <f:textbox default="${descriptor.currentTime}" field="timestamp"/>
        </f:invisibleEntry>

        <f:optionalBlock title="Enable TLS/SSL Server Certificate Validation" inline="true"
                         field="disableCertificateValidation"/>

        <f:entry title="Default Server URL" field="serverUrl">
            <f:textbox/>
        </f:entry>

        <j:if test="${descriptor.isOldCredentials()}">
            <f:block>
                <div style="font-weight: bold; padding: 8px;">You are currently using the Checkmarx credential method.
                    To switch to the new Jenkins Credential method, click Add and select your new credentials.
                </div>
            </f:block>
        </j:if>

        <f:entry field="credentialsId" title="${%Credentials}">
            <c:select/>
        </f:entry>

        <f:invisibleEntry>
            <f:readOnlyTextbox field="username"/>
            <f:readOnlyTextbox field="password"/>
        </f:invisibleEntry>

        <f:optionalBlock title="Use Jenkins proxy" inline="true" field="isProxy" />

		<f:validateButton title="Test Connection" progress="Testing..." method="testConnection"
			with="isProxy,serverUrl,username,password,timestamp,credentialsId" />

        <f:entry title="Maven Path" field="mvnPath">
            <f:textbox/>
        </f:entry>

        <f:validateButton title="Validate Maven Path" progress="Validating..." method="validateMvnPath"
                          with="mvnPath"/>

        <f:entry title="Default Exclude folders" field="excludeFolders">
            <f:textbox/>
        </f:entry>

        <f:entry title="Default Include/Exclude wildcard patterns" field="filterPattern">
            <f:textarea default="${descriptor.DEFAULT_FILTER_PATTERNS}"/>
        </f:entry>

        <f:optionalBlock title="Deny new Checkmarx projects creation" inline="true" field="prohibitProjectCreation"/>

        <f:optionalBlock title="Hide results" inline="true" field="hideResults"/>
        <f:optionalBlock title="Remove Html results in Async mode" inline="true" field="asyncHtmlRemoval"/>

        <f:entry name="jobGlobalStatusOnError" title="Job status when CxSAST scan returns an error:"
                 field="jobGlobalStatusOnError">
            <f:enum field="jobGlobalStatusOnError">${it.displayName}</f:enum>
        </f:entry>
         <f:entry title="Sast Comment" field="sastcomment">
                    <f:textarea  default=""/>
                </f:entry>


        <f:optionalBlock title="Globally Define vulnerability thresholds for all jobs" inline="true"
                         field="forcingVulnerabilityThresholdEnabled">

            <f:optionalBlock title="Always use the defined global vulnerability thresholds" inline="true"
                             field="lockVulnerabilitySettings"/>

            <f:entry title="Build status when results exceed threshold:" field="jobGlobalStatusOnThresholdViolation">
                <f:enum>${it.displayName}</f:enum>
            </f:entry>

            <f:entry title="SAST High severity vulnerabilities threshold" field="highThresholdEnforcement">
                <f:number clazz="positive-number" min="0" step="1" default=""/>
            </f:entry>

            <f:entry title="SAST Medium severity vulnerabilities threshold" field="mediumThresholdEnforcement">
                <f:number clazz="positive-number" min="0" step="1" default=""/>
            </f:entry>
            <f:entry title="SAST Low severity vulnerabilities threshold" field="lowThresholdEnforcement">
                <f:number clazz="positive-number" min="0" step="1" default=""/>
            </f:entry>
            <f:entry title="Dependency scan high severity vulnerabilities threshold" field="osaHighThresholdEnforcement">
                <f:number clazz="positive-number" min="0" step="1" default=""/>
            </f:entry>
            <f:entry title="Dependency scan medium severity vulnerabilities threshold" field="osaMediumThresholdEnforcement">
                <f:number clazz="positive-number" min="0" step="1" default=""/>
            </f:entry>
            <f:entry title="Dependency scan low severity vulnerabilities threshold" field="osaLowThresholdEnforcement">
                <f:number clazz="positive-number" min="0" step="1" default=""/>
            </f:entry>
        </f:optionalBlock>

        <f:optionalBlock title="Set job scan timeout threshold" inline="true" field="scanTimeOutEnabled">
            <f:entry title="Scan timeout (minutes)" field="scanTimeoutDuration">
                <f:number clazz="positive-number" min="0" step="1" default="1"/>
            </f:entry>
        </f:optionalBlock>

        <f:optionalBlock title="Globally define dependency scan settings" field="dependencyScanConfig"
                         checked="${descriptor.dependencyScanConfig != null}">
            <f:entry title="Include/Exclude wildcard patterns" field="dependencyScanPatterns">
                <f:textarea value="${descriptor.dependencyScanConfig.dependencyScanPatterns}" />
            </f:entry>
            <f:entry title="Exclude folders" field="dependencyScanExcludeFolders">
                <f:textbox value="${descriptor.dependencyScanConfig.dependencyScanExcludeFolders}" />
            </f:entry>

            <f:radioBlock checked="${descriptor.dependencyScanConfig.dependencyScannerType == 'OSA'}" inline="true"
                          name="dependencyScannerType" title="Use CxOSA dependency scanner" value="OSA">
                <f:nested>
                    <f:entry title="Archive extract patterns" field="osaArchiveIncludePatterns">
                        <f:textbox default="${descriptor.DEFAULT_OSA_ARCHIVE_INCLUDE_PATTERNS}"
                                   value="${descriptor.dependencyScanConfig.osaArchiveIncludePatterns}"/>
                    </f:entry>
                    <f:entry title="Execute dependency managers 'install packages' command before Scan"
                             field="osaInstallBeforeScan">
                        <f:checkbox checked="${descriptor.dependencyScanConfig.osaInstallBeforeScan}"/>
                    </f:entry>
                </f:nested>
            </f:radioBlock>

            <f:radioBlock checked="${descriptor.dependencyScanConfig.dependencyScannerType == 'SCA'}"
                          inline="true" name="dependencyScannerType" title="Use CxSCA dependency scanner" value="SCA">
                <f:nested>
                    <f:entry title="CxSCA API URL" field="scaServerUrl">
                        <f:textbox default="${descriptor.DEFAULT_SCA_SERVER_URL}"
                                   value="${descriptor.dependencyScanConfig.scaServerUrl}"/>
                    </f:entry>
                    <f:entry title="Access control server URL" field="scaAccessControlUrl">
                        <f:textbox default="${descriptor.DEFAULT_SCA_ACCESS_CONTROL_URL}"
                                   value="${descriptor.dependencyScanConfig.scaAccessControlUrl}"/>
                    </f:entry>
                    <f:entry title="CxSCA web app URL" field="scaWebAppUrl">
                        <f:textbox default="${descriptor.DEFAULT_SCA_WEB_APP_URL}"
                                   value="${descriptor.dependencyScanConfig.scaWebAppUrl}"/>
                    </f:entry>
                    <f:entry title="CxSCA credentials" field="scaCredentialsId">
                        <c:select value="${descriptor.dependencyScanConfig.scaCredentialsId}" />
                    </f:entry>
                    <f:description>**Note:SAML and SSO are not supported
                      </f:description>
                    <f:entry title="Account" field="scaTenant">
                        <f:textbox value="${descriptor.dependencyScanConfig.scaTenant}"/>
                    </f:entry>
                    <f:validateButton title="Test Connection" progress="Testing..." method="testScaConnection"
                                      with="scaServerUrl,scaAccessControlUrl,scaCredentialsId,scaTenant"/>
                </f:nested>
            </f:radioBlock>
        </f:optionalBlock>
    </f:section>

</j:jelly>
